@page "/Lobby"
@using nabegemu.Database.Models
@rendermode InteractiveServer
@inject NavigationManager Navigation
@implements IAsyncDisposable

<h3>Game Lobby: @gameCode</h3>

@if (requiredPlayersMet)
{
    <p>Loading game...</p>

    <ul>
        @foreach (var playerName in playerNames)
        {
            <li>Chef @playerName</li>
        }
    </ul>
}
else
{
    <p>Hiring cooks...</p>

    <ul>
        @foreach (var playerName in playerNames)
        {
            <li>@playerName</li>
        }
    </ul>
}

@code {
    private HubConnection? hubConnection;
    private List<string> playerNames = new List<string>();
    private bool requiredPlayersMet = false;
    private int? gameCode;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
        .WithUrl(Navigation.ToAbsoluteUri("/lobbyhub"))
        .Build();

        hubConnection.On<Game>("NewPlayerAdded", (game) =>
        {
            gameCode = game.GameId;

            foreach(var player in game.Players)
            {
                playerNames.Add(player.Name);
            }

            if (playerNames.Count == 4)
            {
                requiredPlayersMet = true;
            }

            InvokeAsync(StateHasChanged);
            playerNames = new List<string>();
        });

        hubConnection.On<Game>("NewGameCreated", (game) =>
        {
            gameCode = game.Players[0].Code;

            playerNames.Add(game.Players[0].Name);

            InvokeAsync(StateHasChanged);
            playerNames = new List<string>();
        });

        await hubConnection.StartAsync();
    }

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }
}