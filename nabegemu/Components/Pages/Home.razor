@page "/"
@rendermode InteractiveServer
@inject NavigationManager Navigation
@implements IAsyncDisposable

<PageTitle>Home</PageTitle>

<div class="text-center">
    <h1>鍋ゲーム!</h1>
    <h2>The Hot Pot Game!</h2>
</div>

<div class="flex justify-content--center">
    <img src="/images/hot-pot-cute-logo-1.jpeg" class="image--main" />
</div>

<br />

<div class="flex justify-content--center flex-direction--column">
    <label for="Join-Game-Code">Get cooking with your name and a game code:</label>
    <div class="input-group mb-3">
        <input type="text" id="Player-Name" class="form-control" placeholder="Name" @bind="playerName" aria-label="Player Name" aria-describedby="player-name-input">
        <input type="text" id="Join-Game-Code" class="form-control" placeholder="Game code" @bind="joinGameCode" aria-label="Join a game code" aria-describedby="join-game-code-input">
        <div class="input-group-append">
            <button class="btn btn-success" @onclick="AddPlayer">Go!</button>
        </div>
    </div>

    <div class="flex justify-content--center flex-direction--column text-center">
        <small>Want to start a new game?</small>
        <input type="text" id="Player-Name" class="form-control" placeholder="Name" @bind="playerName" aria-label="Player Name" aria-describedby="player-name-input">
        <button class="btn btn-sm btn-link" type="button" @onclick="CreateGame">Click here!</button>
    </div>
</div>

@code {
    private HubConnection? hubConnection;
    private string? playerName;
    private string? joinGameCode;

    public bool IsConnected =>
        hubConnection?.State == HubConnectionState.Connected;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(Navigation.ToAbsoluteUri("/lobbyhub"))
            .Build();

        await hubConnection.StartAsync();
    }

    private async Task AddPlayer()
    {
        if (hubConnection is not null)
        {
            await hubConnection.SendAsync("AddNewPlayer", playerName, joinGameCode);

            Navigation.NavigateTo("/Lobby");
        }
    }

    private async Task CreateGame()
    {
        if (hubConnection is not null)
        {
            await hubConnection.SendAsync("CreateNewGame", playerName);

            Navigation.NavigateTo("/Lobby");
        }
    }

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }
}
